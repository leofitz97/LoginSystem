{"ast":null,"code":"var _jsxFileName = \"/home/lemuel/LoginSystem/client/src/components/ForgottenPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ForgottenPassword = () => {\n  _s();\n  const [password, setPassword] = useState('');\n  const [email, setEmail] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [emailFound, setEmailFound] = useState(false);\n  const findEmail = () => {\n    fetch('http://localhost:5000/forgot_password/' + email, {\n      method: 'GET'\n    }).then(res => res.json()).then(res => {\n      if (res.status === 'success') {\n        setEmailFound(true);\n      }\n      ;\n    }).catch(err => alert('Network Error'));\n  };\n  const handleSubmit = () => {\n    fetch('http://localhost:5000/reset_password', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify()\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: 'rgba(210, 105, 30, 0.413)'\n    },\n    className: \"min-vh-100 d-flex flex-column align-items-center justify-content-center\",\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: emailFound === true && handleSubmit,\n      className: \"bg-light d-flex flex-column p-4 rounded-2\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          className: \"fw-bold\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n          children: \"Enter your email address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), emailFound === true && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"d-flex flex-column mb-3\",\n          controlId: \"formBasicPassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            className: \"password fw-bold\",\n            children: \"New Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"d-flex flex-column mb-3\",\n          controlId: \"formConfirmPassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            className: \"form-label password fw-bold\",\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            size: \"sm\",\n            maxLength: 10,\n            required: true,\n            value: confirmPassword,\n            onChange: e => setConfirmPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(Button, {\n        size: \"sm\",\n        type: emailFound === true ? 'submit' : 'button',\n        onClick: emailFound === false && findEmail(),\n        children: emailFound === true ? 'Reset Password' : 'Submit'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(ForgottenPassword, \"GhSNhWZJWx+lAX9aY0kJdzrdnX0=\");\n_c = ForgottenPassword;\nexport default ForgottenPassword;\nvar _c;\n$RefreshReg$(_c, \"ForgottenPassword\");","map":{"version":3,"names":["React","useState","Button","Form","ForgottenPassword","password","setPassword","email","setEmail","confirmPassword","setConfirmPassword","emailFound","setEmailFound","findEmail","fetch","method","then","res","json","status","catch","err","alert","handleSubmit","headers","body","JSON","stringify","backgroundColor","e","target","value"],"sources":["/home/lemuel/LoginSystem/client/src/components/ForgottenPassword.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { Button, Form } from 'react-bootstrap'\n\nconst ForgottenPassword = () => {\n  const [password, setPassword] = useState('');\n  const [email, setEmail] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [emailFound, setEmailFound] = useState(false);\n\n  const findEmail=()=>{\n    fetch('http://localhost:5000/forgot_password/'+email, {method:'GET'})\n    .then(res=>res.json())\n    .then(res=>{\n      if (res.status==='success'){\n        setEmailFound(true);\n      };\n    })\n    .catch(err=>alert('Network Error'))\n  }\n  \n\n  const handleSubmit=()=>{\n    fetch('http://localhost:5000/reset_password', {\n      method: 'POST',\n      headers: {'Content-Type':'application/json'},\n      body: JSON.stringify()\n    })\n  }\n  return (\n    <div style={{backgroundColor: 'rgba(210, 105, 30, 0.413)'}} className='min-vh-100 d-flex flex-column align-items-center justify-content-center'>\n      <Form onSubmit={emailFound===true&&handleSubmit} className='bg-light d-flex flex-column p-4 rounded-2'>\n        <Form.Group className='mb-3'>\n          <Form.Label className='fw-bold'>Email</Form.Label>\n          <Form.Control type='email' value={email} onChange={(e)=>setEmail(e.target.value)}/>\n          <Form.Text>Enter your email address</Form.Text>\n        </Form.Group>\n        {emailFound === true && \n        <>\n          <Form.Group className='d-flex flex-column mb-3' controlId='formBasicPassword'>\n            <Form.Label className='password fw-bold'>New Password</Form.Label>\n            <Form.Control type='password' value={password} onChange={(e)=>setPassword(e.target.value)}/>\n        </Form.Group>\n        <Form.Group className='d-flex flex-column mb-3' controlId='formConfirmPassword'>\n          <Form.Label className='form-label password fw-bold'>Confirm Password</Form.Label>\n          <Form.Control type='password' size='sm' maxLength={10} required value={confirmPassword} onChange={(e)=>setConfirmPassword(e.target.value)}/>\n        </Form.Group></>\n      }\n      <Button size='sm' type={emailFound===true?'submit':'button'} onClick={emailFound===false && findEmail()}>{emailFound===true ? 'Reset Password': 'Submit'}</Button>\n      </Form>\n    </div>\n  )\n}\n\nexport default ForgottenPassword;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}